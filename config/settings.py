"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.10.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#k=i*ska@@^w19^-ij_nr$$6f%wnbalq0fqn!&ie=ai9jwuch8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'photo',
    'accounts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'
# 가상 url 웹 브라우져에서는 media폴더 밑에 있다고 보임, 외부 사용자가 폴더 구조를 알 수 없게끔 가짜 정보를 흘림
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# 실제 폴더 위치

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# reverse_lazy 함수를 사용해서 다른 뷰를 적용할 수 있음
LOGIN_REDIRECT_URL = '/'


# from .secret_keys import *
# AWS_ACCESS_KET_ID = MY_AWS_ACCESS_KEY_ID
# AWS_SECRET_ACCESS_KET = MY_AWS_SECRET_ACCESS_KEY
# AWS_REGION = 'ap-noryheast-2'
# AWS_STORAGE_BUCKET_NAME = 'dstagram=django3'
# AWS_S3_CUSTOM_DOMAIN = '%s.s3.%s.amazonaws.com'%(AWS_STORAGE_BUCKET_NAME, AWS_REGION)
#
# AWS_S3_FILE_OVERWRITE = False
# # 파일 오버라이트 방지
# AWS_S3_OBJECT_PARAMETERS = {
#     'CacheControl':'max-age=86400'
# } # cash 강제로 삭제하기, 관리자가 바꿔도 cash가 사용자에게 남아 있어 다른 화면을 보여주는 것을 방지
#
# AWS_DEAFULT_ACL = 'public-read'
# # 파일을 올릴 때 어떤 권한으로 올리는지, 설정 안하면 가끔 외부 접근이 안되서 못보는 경우가 생김
# AWS_LOCATION = 'static'
# # 버킷 안에 어느 폴더에 집어 넣을지
#
# STATIC_URL = 'http://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
# # 위에 static_url 경로를 바꿔줘서 AWS 서비스 경로를 바꿈
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
#
# # 가상 url 웹 브라우져에서는 media폴더 밑에 있다고 보임, 외부 사용자가 폴더 구조를 알 수 없게끔 가짜 정보를 흘림
#
# DEFAULT_FILE_STORAGE = 'config.s3media.MediaStorage'
